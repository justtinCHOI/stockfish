buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.github.node-gradle.node' version '7.0.0'//+
}

group = 'com.stockfish'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket' // +
    implementation 'org.java-websocket:Java-WebSocket:1.5.2' // +
    implementation 'javax.annotation:javax.annotation-api:1.3.2'// +

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'com.google.code.gson:gson:2.8.9' // +

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-security' // +
    testImplementation 'org.springframework.security:spring-security-test' // +

    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    implementation 'net.coobird:thumbnailator:0.4.19'


    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.json:json:20231013' // +
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'

    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'//+

    //직렬화

//    implementation 'org.springframework.boot:spring-boot-starter-websocket'
//    implementation 'org.springframework.boot:spring-boot-starter-messaging'

    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")
    implementation 'org.mapstruct:mapstruct:1.5.5.Final' // +
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final' // +
}

tasks.named('test') {
    useJUnitPlatform()
}

compileJava.dependsOn('clean')

//stockfishclient 에서 npm run build
//만들어진 src/main/stockfishclient/dist 안의 내용물 -> src/main/resources/static
//를 자동화 해준다.

//def frontendDir = "$projectDir/src/main/stockfishclient"
//
//node {
//    version = '18.15.0'      // Node.js 버전 설정
//    npmVersion = '9.5.0'     // npm 버전 설정
//    download = true          // Node.js와 npm 다운로드 설정
//    workDir = file("${projectDir}/.gradle/nodejs")  // Node.js 작업 디렉토리
//    npmWorkDir = file("${projectDir}/.gradle/npm")  // npm 작업 디렉토리
//}
//
//sourceSets {
//    main {
//        resources { srcDirs = ["$projectDir/src/main/resources"]
//        }
//    }
//}
//
//processResources { dependsOn "copyReactBuildFiles" }
//
//task installReact(type: Exec) {
//    workingDir "$frontendDir"
//    inputs.dir "$frontendDir"
//    group = BasePlugin.BUILD_GROUP
//    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//        commandLine "npm.cmd", "audit", "fix"
//        commandLine 'npm.cmd', 'install' }
//    else {
//        commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
//    }
//}
//
//task buildReact(type: Exec) {
//    dependsOn "installReact"
//    workingDir "$frontendDir"
//    inputs.dir "$frontendDir"
//    group = BasePlugin.BUILD_GROUP
//    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//        commandLine "npm.cmd", "run-script", "build"
//    } else {
//        commandLine "npm", "run-script", "build"
//    }
//}
//
//task copyReactBuildFiles(type: Copy) {
//    dependsOn "buildReact"
//    from "$frontendDir/dist"
//    into "$projectDir/src/main/resources/static"
//}
